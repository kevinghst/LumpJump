{"version":3,"sources":["webpack:///webpack/bootstrap 959ab7bd1e82db191f75","webpack:///./lib/poodle.js","webpack:///./lib/game.js","webpack:///./lib/game_view.js","webpack:///./lib/monster.js","webpack:///./lib/pad.js","webpack:///./lib/snowflake.js","webpack:///./lib/poodlejump.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;;;;;;ACpEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,gBAAgB;AAChC;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;;AAElC;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpWA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC5CA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 959ab7bd1e82db191f75","\nclass Poodle{\n  constructor(width, height){\n    this.gameWidth = width;\n    this.gameHeight = height;\n    this.image = new Image();\n    this.image.src = \"./assets/lumpy.png\";\n    this.width = 55;\n    this.height = 60;\n    this.x = 0;\n    this.y = 0;\n    this.isJumping = false;\n    this.isFalling = false;\n    this.jumpSpeed = 0;\n    this.fallSpeed = 0;\n  }\n\n  setPosition(x, y){\n    this.x = x;\n    this.y = y;\n  }\n\n  draw(ctx){\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  }\n\n  jump(){\n    if(this.isJumping === false && this.isFalling === false){\n      this.fallSpeed = 0;\n      this.isJumping = true;\n      this.jumpSpeed = 17;\n    }\n  }\n\n  checkFall(){\n    if(this.y + this.height < this.gameHeight){\n      this.setPosition(this.x, (this.y + this.fallSpeed));\n      this.fallSpeed = this.fallSpeed + 1;\n    }\n  }\n\n  continualFall(){\n    this.setPosition(this.x, (this.y + this.fallSpeed));\n    this.fallSpeed = this.fallSpeed + 1;\n  }\n\n  fallStop(){\n    this.isFalling = false;\n    this.fallSpeed = 0;\n    this.jump();\n  }\n\n  moveLeft(){\n    if (this.x >0){\n      this.setPosition(this.x-10, this.y);\n    }\n  }\n\n  moveRight(){\n    if (this.x + this.width < this.gameWidth){\n      this.setPosition(this.x+10, this.y);\n    }\n  }\n\n\n\n}\n\nmodule.exports = Poodle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/poodle.js\n// module id = 0\n// module chunks = 0","const Pad = require(\"./pad\");\nconst Poodle = require(\"./poodle\");\nconst Monster = require(\"./monster\");\nconst Snowflake = require(\"./snowflake\");\n\nclass Game{\n  constructor(ctx, width, height, numPads){\n    this.image = new Image();\n    this.image.src = \"./assets/background90.png\";\n    this.snowflakes = [];\n    this.pads = [];\n    this.monsters = [];\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n    this.intervalHeight = (height - 80)/numPads;\n    this.numPads = numPads;\n    this.poodle = new Poodle(width, height);\n    this.poodle.setPosition(width/2, height/2);\n    this.addPads();\n    this.addSnowflakes();\n    this.points = 0;\n    this.intervalID = null;\n    this.lossID = null;\n    this.menuId = null;\n    this.immune = false;\n    this.padIndex = 0;\n    this.fallcount = 0;\n  }\n\n  reset(){\n    this.snowflakes = [];\n    this.pads = [];\n    this.monsters = [];\n    this.poodle = new Poodle(this.width, this.height);\n    this.poodle.setPosition(this.width/2, this.height/2);\n    this.addPads();\n    this.addSnowflakes();\n    this.points = 0;\n    this.padIndex = 0;\n    this.fallcount = 0;\n  }\n\n  addSnowflakes(){\n    let number = 40;\n    for(let i=0; i<number; i++){\n      let x = Math.random() * this.width;\n      let y = Math.random() * this.height;\n      this.snowflakes.push(new Snowflake(x, y, this.width, this.height, number));\n    }\n  }\n\n  addPads(){\n    for(let i=0; i<this.numPads; i++){\n      let type = \"ord\";\n      let move = false;\n\n      let num = Math.random();\n      if(num < 0.1) { type = \"hype\" };\n\n      let numTwo = Math.random();\n      if(numTwo < 0.02) { move = true };\n\n      this.pads.push(new Pad(this.getRandomInt(0, this.width - 60), 40+(i * this.intervalHeight), type, move, this.padIndex));\n      this.padIndex += 1;\n    }\n  }\n\n  destroyPad(index){\n    this.pads.forEach((pad, idx) => {\n      if(pad.index === index){\n        this.pads.splice(idx, 1);\n      }\n    });\n  }\n\n  checkCollision(){\n    let toDestroy;\n    const that = this;\n    this.pads.forEach( function(pad){\n      if ((that.poodle.isFalling)\n      && (that.poodle.x + that.poodle.width > pad.x)\n      && (that.poodle.x < pad.x + pad.length)\n      && (that.poodle.y + that.poodle.height > pad.y)\n      && (that.poodle.y < pad.y + pad.thick)){\n          pad.onCollide(that.poodle);\n          if(pad.type === \"hype\"){\n            that.immune = true;\n          }\n          else if(pad.type === \"ord\"){\n            that.immune = false;\n          } else if(pad.type === \"red\"){\n            toDestroy = pad.index;\n          }\n        }\n    });\n    this.destroyPad(toDestroy);\n  }\n\n  checkMonsterStep(){\n    const that = this;\n    this.monsters.forEach( function(monster){\n      if((that.poodle.isFalling)\n      && (that.poodle.x + that.poodle.width > monster.x)\n      && (that.poodle.x < monster.x + monster.width)\n      && (that.poodle.y + that.poodle.height > monster.y)\n      && (that.poodle.y < monster.y + monster.height/5)){\n        that.poodle.fallStop();\n        that.poodle.jumpSpeed = 25;\n        that.immune = true;\n        monster.state = \"dead\";\n      }\n    });\n  }\n\n  checkMonsterCollision(){\n    const that = this;\n    if (this.immune === false){\n      this.monsters.forEach( function(monster){\n        if(monster.contains([that.poodle.x, that.poodle.y])\n          || monster.contains([that.poodle.x + that.poodle.width, that.poodle.y])\n          || monster.contains([that.poodle.x, that.poodle.y + that.poodle.height])\n          || monster.contains([that.poodle.x + that.poodle.width, that.poodle.y + that.poodle.height])){\n            gameState = false;\n          }\n      });\n    }\n  }\n\n  checkDeath(){\n    if(this.poodle.y + this.poodle.height >= this.height){\n      gameState = false;\n    }\n  }\n\n  movePoodle(){\n    if(keyLeft) {\n      this.poodle.moveLeft();\n    }\n    else if (keyRight){\n      this.poodle.moveRight();\n    }\n  }\n\n  checkJump(){\n    const that = this;\n    if(this.poodle.y > this.height*0.4){\n      this.poodle.setPosition(this.poodle.x, (this.poodle.y - this.poodle.jumpSpeed));\n    } else {\n      this.points = this.points + Math.floor(this.poodle.jumpSpeed * 0.1);\n      this.pads.forEach( function(pad){\n        pad.y = pad.y + that.poodle.jumpSpeed;\n\n        if(that.pads.length > that.numPads){\n          that.pads = that.pads.slice(0, 6);\n        }\n\n        if(pad.y > that.height){\n          let type = \"ord\";\n          let move = false;\n          let moveRatio = 0.02 + (0.48/3000) * that.points;\n          let redRatio = 0.01  + (0.19/5000) * that.points;\n\n          let num = Math.random();\n          let numFour = Math.random();\n          if(num < 0.1){\n            type = \"hype\";\n          }\n          else if(numFour < redRatio){\n            type = \"red\";\n          }\n\n          let numTwo = Math.random();\n          if(numTwo < moveRatio) { move = true };\n\n          that.pads.unshift(new Pad(that.getRandomInt(0, that.width - 60), that.pads[0].y - that.intervalHeight, type, move, that.padIndex));\n          that.padIndex += 1;\n\n          let monsterChance = 0.02 + (0.18 / 10000) * that.points;\n          if (monsterChance > 0.2) { monsterChance = 0.2 };\n          let randomNum = Math.random();\n          if(randomNum < monsterChance) {\n            that.monsters.unshift(new Monster(that.getRandomInt(0, that.width - 60), -70));\n          }\n        }\n      });\n\n      let monstersDup = [].concat(this.monsters);\n      this.monsters.forEach( function(monster, idx){\n        if(monster.state === \"dead\"){\n          monster.y = monster.y + 40;\n        } else {\n          monster.y = monster.y + that.poodle.jumpSpeed;\n          monster.Ymin = monster.Ymin + that.poodle.jumpSpeed;\n          monster.Ymax = monster.Ymax + that.poodle.jumpSpeed;\n          if (monster.y > that.height){\n            monstersDup.splice(idx, 1);\n          }\n        }\n      });\n\n      this.snowflakes.forEach( (snowflake)=>{\n        snowflake.y = snowflake.y + that.poodle.jumpSpeed;\n      });\n    }\n\n    this.poodle.jumpSpeed = this.poodle.jumpSpeed - 1;\n    if (this.poodle.jumpSpeed === 0){\n      this.poodle.isJumping = false;\n      this.poodle.isFalling = true;\n      this.poodle.fallSpeed = 1;\n    }\n  }\n\n  renderMenu(ctx){\n    if (gameState === false){\n      ctx.drawImage(this.image, 0, 0, this.image.width, this.image.height,\n                                0, 0, this.width, this.height);\n    } else {\n      this.start();\n      clearInterval(this.menuID);\n    }\n\n  }\n\n  renderLoss(ctx){\n    if (gameState === false)\n    {\n      if(this.fallcount < 50){\n        ctx.clearRect(0, 0, this.width, this.height);\n        ctx.fillStyle = \"#6b92b9\";\n        ctx.fillRect(0, 0, this.width, this.height);\n\n        this.poodle.continualFall();\n        this.poodle.draw(ctx);\n        this.renderObjects(ctx);\n\n        ctx.fillStyle = \"Black\";\n        ctx.font = \"23px Arial\";\n        ctx.fillText(\"POINTS: \" + this.points, 10, 30);\n        this.fallcount = this.fallcount + 1;\n\n      } else {\n        ctx.drawImage(this.image, 0, 0, this.image.width, this.image.height,\n                                  0, 0, this.width, this.height);\n        ctx.fillStyle = \"Black\";\n        ctx.font = \"18pt Calibri\";\n        ctx.fillText(\"GAME OVER\", 280, 100);\n        ctx.fillText(\"YOUR SCORE: \" + this.points, 270, 130);\n      }\n    } else {\n      this.start();\n      clearInterval(this.lossID);\n    }\n  }\n\n  renderObjects(ctx){\n    this.snowflakes.forEach((snowflake) => {\n      snowflake.draw(ctx);\n    });\n\n    this.pads.forEach((pad) => {\n      if(pad.isMoving) {\n        if(pad.x < 0){\n          pad.direction = 1;\n        }\n        else if(pad.x + pad.length > this.width){\n          pad.direction = -1;\n        }\n        pad.x = pad.x + pad.direction * 5;\n      }\n      if(pad.type === \"red\"){\n        if(pad.timer > 0){\n          pad.color = \"#F5F5F5\";\n        } else {\n          pad.color = null;\n        }\n        if(pad.timer >= 16){\n          pad.timer = -16;\n        }\n        pad.timer += 1;\n      }\n      pad.draw(ctx);\n    });\n\n    this.monsters.forEach((monster) => {\n      if(monster.x < 0){\n        monster.Xdirection = 1;\n        monster.setDirection();\n      }\n      else if (monster.x + monster.width > this.width){\n        monster.Xdirection = -1;\n        monster.setDirection();\n      }\n      monster.x = monster.x + monster.Xdirection * 4;\n\n      if(monster.y < monster.Ymin){\n        monster.Ydirection = 1;\n      }\n      else if (monster.y + monster.height > monster.Ymax){\n        monster.Ydirection = -1;\n      }\n      monster.y = monster.y + monster.Ydirection * 3;\n      monster.draw(ctx);\n    });\n  }\n\n  draw(ctx){\n    if(gameState === false){\n      this.lossID = setInterval(this.renderLoss.bind(this, this.ctx), 30);\n      clearInterval(this.intervalID);\n    } else {\n      ctx.clearRect(0, 0, this.width, this.height);\n      ctx.fillStyle = \"#6b92b9\";\n\n      ctx.fillRect(0, 0, this.width, this.height);\n\n      this.movePoodle();\n      this.poodle.jump();\n\n      if(this.poodle.isJumping){\n        this.checkJump();\n      }\n\n      if(this.poodle.isFalling){\n        this.poodle.checkFall();\n        this.checkDeath();\n      }\n\n      this.checkMonsterStep();\n      this.checkCollision();\n      this.checkMonsterCollision();\n      this.poodle.draw(ctx);\n\n      this.renderObjects(ctx);\n\n      ctx.fillStyle = \"Black\";\n      ctx.font = \"23px Arial\";\n      ctx.fillText(\"POINTS: \" + this.points, 10, 30);\n    }\n  }\n\n  getRandomInt(min, max){\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  start(){\n    if(gameState === false){\n      this.menuID = setInterval(this.renderMenu.bind(this, this.ctx), 30);\n    } else {\n      this.reset();\n      this.intervalID = setInterval(this.draw.bind(this, this.ctx), 30);\n    }\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Game = require(\"./game\");\nconst Poodle = require(\"./poodle\");\n\nclass GameView {\n  constructor(game, ctx){\n    this.ctx = ctx;\n    this.game = game;\n    this.poodle = new Poodle();\n  }\n\n  start(){\n    this.game.draw(this.ctx);\n  }\n\n\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 2\n// module chunks = 0","class Monster{\n  constructor(x, y){\n    this.state = \"alive\";\n    this.image = new Image();\n    this.x = x;\n    this.y = y;\n    this.width = 50;\n    this.height = 70;\n    this.Ymin = this.y - 15;\n    this.Ymax = this.y + this.height + 15;\n    this.Xdirection = ~~(Math.random() * 2) ? -1 : 1;\n    this.Ydirection = ~~(Math.random() * 2) ? -1 : 1;\n    if (this.Xdirection === 1){\n      this.image.src = \"./assets/iceKingFloatRight.png\";\n    } else {\n      this.image.src = \"./assets/iceKingFloatLeft.png\";\n    }\n  }\n\n  draw(ctx){\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  }\n\n  setDirection(){\n    if (this.Xdirection === 1){\n      this.image.src = \"./assets/iceKingFloatRight.png\";\n    } else {\n      this.image.src = \"./assets/iceKingFloatLeft.png\";\n    }\n  }\n\n  contains(coord){\n    let x = coord[0];\n    let y = coord[1];\n    if (this.x < x\n        && this.x + this.width > x\n        && this.y < y\n        && this.y + this.height > y){\n          return true;\n        } else {\n          return false;\n        }\n  }\n\n}\n\nmodule.exports = Monster;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/monster.js\n// module id = 3\n// module chunks = 0","const Poodle = require(\"./poodle\");\n\nclass Pad{\n  constructor(x, y, type, move, index){\n    this.length = 60;\n    this.thick = 10;\n    this.x = x;\n    this.y = y;\n    this.type = type;\n    this.direction = ~~(Math.random() * 2) ? -1 : 1;\n    this.isMoving = move;\n    this.index = index;\n    this.timer = 0;\n\n    let num = Math.random();\n    if(num < 0.2) { type }\n\n    if(type === \"ord\"){\n      this.color = \"#F5F5F5\";\n    }\n    else if (type === \"hype\"){\n      this.color = \"#F7F817\";\n    }\n    else if (type === \"red\"){\n      this.color = null;\n    }\n  }\n\n  draw(ctx){\n    ctx.fillStyle = this.color;\n    if(this.color){\n      this.roundRect(ctx, this.x, this.y, this.length, this.thick, 5, true);\n    } else {\n      this.roundRect(ctx, this.x, this.y, this.length, this.thick, 5);\n    }\n  }\n\n  onCollide(poodle){\n    poodle.fallStop();\n    if(this.type === \"hype\"){\n      poodle.jumpSpeed = 50;\n    }\n  }\n\n  roundRect(ctx, x, y, width, height, radius, fill, stroke){\n    if (typeof stroke == 'undefined') {\n      stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n      radius = 5;\n    }\n    if (typeof radius === 'number') {\n      radius = {tl: radius, tr: radius, br: radius, bl: radius};\n    } else {\n      var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\n      for (var side in defaultRadius) {\n        radius[side] = radius[side] || defaultRadius[side];\n      }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n      ctx.fill();\n    }\n    if (stroke) {\n      ctx.stroke();\n    }\n  }\n}\n\nmodule.exports = Pad;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pad.js\n// module id = 4\n// module chunks = 0","class Snowflake{\n  constructor(x, y, width, height, number){\n    this.gameWidth = width;\n    this.gameHeight = height;\n    this.x = x;\n    this.y = y;\n    this.r = Math.random()*4+1;\n    this.d = Math.random() * number;\n    this.angle = 0;\n  }\n\n  draw(ctx){\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    ctx.beginPath();\n    ctx.moveTo(this.x, this.y);\n    ctx.arc(this.x, this.y, this.r, 0, Math.PI*2, true);\n    ctx.fill();\n    this.update();\n  }\n\n  update(){\n    this.angle += 0.01;\n    this.y += Math.cos(this.angle + this.d) + 1 + this.r/2;\n    this.x += Math.sin(this.angle) * 2;\n\n    if(this.x > this.gameWidth || this.x < -5 || this.y > this.gameHeight){\n      let num = Math.random();\n      if(num < 0.67){\n        this.x = Math.random() * this.gameWidth;\n        this.y = -10;\n      } else {\n        if(Math.sin(this.angle) > 0){\n          this.x = -5;\n          this.y = Math.random()* this.gameHeight;\n        } else {\n          this.x = this.gameWidth + 5;\n          this.y = Math.random() * this.gameHeight;\n        }\n      }\n    }\n  }\n\n}\n\nmodule.exports = Snowflake;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/snowflake.js\n// module id = 5\n// module chunks = 0","const Game = require(\"./game.js\");\nconst GameView = require(\"./game_view.js\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = 500;\n  canvasEl.height = 500;\n\n  width = 500;\n  height = 500;\n  numPads = 6;\n  keyLeft = false;\n  keyRight = false;\n  gameState = false;\n\n  window.addEventListener(\"keydown\", checkKeyPressed, false);\n  window.addEventListener(\"keyup\", checkKeyLifted, false);\n\n  function checkKeyPressed (event) {\n    if(event.keyCode==37){\n      keyLeft = true;\n      keyRight = false;\n    } else if(event.keyCode==39){\n      keyRight = true;\n      keyLeft = false;\n    } else if(event.keyCode==13){\n      gameState = true;\n    }\n\n  }\n\n  function checkKeyLifted (event) {\n    keyLeft = false;\n    keyRight = false;\n  }\n\n  const ctx = canvasEl.getContext(\"2d\");\n  new Game(ctx, width, height, numPads).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/poodlejump.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}