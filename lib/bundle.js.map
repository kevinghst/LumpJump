{"version":3,"sources":["webpack:///webpack/bootstrap 359fd1b6d86044e3c1c4","webpack:///./lib/poodlejump.js","webpack:///./lib/game.js","webpack:///./lib/pad.js","webpack:///./lib/poodle.js","webpack:///./lib/game_view.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;ACxCD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iBAAgB,gBAAgB;AAChC;AACA;;AAEA;AACA,sBAAqB;;AAErB;AACA,0BAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;;AAEzB;AACA,mCAAkC;;AAElC;AACA;;AAEA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 359fd1b6d86044e3c1c4","const Game = require(\"./game.js\");\nconst GameView = require(\"./game_view.js\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.width = 500;\n  canvasEl.height = 500;\n\n  width = 500;\n  height = 500;\n  numPads = 6;\n  keyLeft = false;\n  keyRight = false;\n  gameState = false;\n\n  window.addEventListener(\"keydown\", checkKeyPressed, false);\n  window.addEventListener(\"keyup\", checkKeyLifted, false);\n\n  function checkKeyPressed (event) {\n    if(event.keyCode==37){\n      keyLeft = true;\n      keyRight = false;\n    } else if(event.keyCode==39){\n      keyRight = true;\n      keyLeft = false;\n    } else if(event.keyCode==13){\n      gameState = true;\n    }\n\n  }\n\n  function checkKeyLifted (event) {\n    keyLeft = false;\n    keyRight = false;\n  }\n\n  const ctx = canvasEl.getContext(\"2d\");\n  new Game(ctx, width, height, numPads).start();\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/poodlejump.js\n// module id = 0\n// module chunks = 0","const Pad = require(\"./pad\");\nconst Poodle = require(\"./poodle\");\n\nclass Game{\n  constructor(ctx, width, height, numPads){\n    this.image = new Image();\n    this.image.src = \"./assets/background.png\";\n    this.pads = [];\n    this.ctx = ctx;\n    this.width = width;\n    this.height = height;\n    this.intervalHeight = (height - 80)/numPads;\n    this.numPads = numPads;\n    // this.state = true;\n    this.poodle = new Poodle(width, height);\n    this.poodle.setPosition(width/2, height/2);\n    this.addPads();\n    this.points = 0;\n    this.intervalID = null;\n    this.lossID = null;\n    this.menuId = null;\n  }\n\n  reset(){\n    this.pads = [];\n    this.poodle = new Poodle(this.width, this.height);\n    this.poodle.setPosition(this.width/2, this.height/2);\n    this.addPads();\n    this.points = 0;\n\n  }\n\n  addPads(){\n    for(let i=0; i<this.numPads; i++){\n      let type = \"ord\";\n      let move = false;\n\n      let num = Math.random();\n      if(num < 0.1) { type = \"hype\" };\n\n      let numTwo = Math.random();\n      if(numTwo < 0.02) { move = true };\n\n      this.pads.push(new Pad(this.getRandomInt(0, this.width - 60), 40+(i * this.intervalHeight), type, move));\n    }\n  }\n\n  checkCollision(){\n    const that = this;\n    this.pads.forEach( function(pad){\n      if ((that.poodle.isFalling)\n      && (that.poodle.x + that.poodle.width > pad.x)\n      && (that.poodle.x < pad.x + pad.length)\n      && (that.poodle.y + that.poodle.height > pad.y)\n      && (that.poodle.y < pad.y + pad.thick)){\n          pad.onCollide(that.poodle);\n        }\n    });\n  }\n\n  checkDeath(){\n    if(this.poodle.y + this.poodle.height >= this.height){\n      gameState = false;\n    }\n  }\n\n  movePoodle(){\n    if(keyLeft) {\n      this.poodle.moveLeft();\n    }\n    else if (keyRight){\n      this.poodle.moveRight();\n    }\n  }\n\n  checkJump(){\n    const that = this;\n    if(this.poodle.y > this.height*0.4){\n      this.poodle.setPosition(this.poodle.x, (this.poodle.y - this.poodle.jumpSpeed));\n    } else {\n      this.points = this.points + Math.floor(this.poodle.jumpSpeed * .1);\n      this.pads.forEach( function(pad){\n        pad.y = pad.y + that.poodle.jumpSpeed;\n\n        if(that.pads.length > that.numPads){\n          that.pads = that.pads.slice(0, 6);\n        }\n\n        if(pad.y > that.height){\n          let type = \"ord\";\n          let move = false;\n          let moveRatio = .02 + (.48/3000) * that.points;\n\n          let num = Math.random();\n          if(num < 0.1) { type = \"hype\" };\n\n          let numTwo = Math.random();\n          if(numTwo < moveRatio) { move = true };\n\n          that.pads.unshift(new Pad(that.getRandomInt(0, that.width - 60), that.pads[0].y - that.intervalHeight, type, move));\n        }\n\n      });\n    }\n\n    this.poodle.jumpSpeed = this.poodle.jumpSpeed - 1;\n    if (this.poodle.jumpSpeed === 0){\n      this.poodle.isJumping = false;\n      this.poodle.isFalling = true;\n      this.poodle.fallSpeed = 1;\n    }\n  }\n\n  renderMenu(ctx){\n    if (gameState === false){\n      ctx.drawImage(this.image, 0, 0, this.image.width, this.image.height,\n                                0, 0, this.width, this.height);\n    } else {\n      this.start();\n      clearInterval(this.menuID);\n    }\n\n  }\n\n  renderLoss(ctx){\n    if (gameState === false)\n    {\n      ctx.drawImage(this.image, 0, 0, this.image.width, this.image.height,\n                                0, 0, this.width, this.height);\n      ctx.fillStyle = \"Black\";\n      ctx.font = \"18pt Calibri\";\n      ctx.fillText(\"GAME OVER\", 320, 100);\n      ctx.fillText(\"YOUR SCORE: \" + this.points, 310, 130);\n    } else {\n      this.start();\n      clearInterval(this.lossID);\n    }\n  }\n\n  draw(ctx){\n    if(gameState === false){\n      ctx.clearRect(0, 0, this.width, this.height);\n      this.lossID = setInterval(this.renderLoss.bind(this, this.ctx), 30);\n      clearInterval(this.intervalID);\n    } else {\n      ctx.clearRect(0, 0, this.width, this.height);\n      ctx.fillStyle = \"#cccccc\";\n      ctx.fillRect(0, 0, this.width, this.height);\n\n      this.movePoodle();\n      this.poodle.jump();\n\n      if(this.poodle.isJumping){\n        this.checkJump();\n      }\n\n      if(this.poodle.isFalling){\n        this.poodle.checkFall();\n        this.checkDeath();\n      }\n\n      this.checkCollision();\n\n      this.poodle.draw(ctx);\n      this.pads.forEach((pad) => {\n        if(pad.isMoving) {\n          if(pad.x < 0){\n            pad.direction = 1;\n          }\n          else if(pad.x + pad.length > this.width){\n            pad.direction = -1;\n          }\n          pad.x = pad.x + pad.direction * 5;\n        }\n        pad.draw(ctx);\n\n        ctx.fillStyle = \"Black\";\n        ctx.font = \"18px Arial\";\n        ctx.fillText(\"POINTS: \" + this.points, 10, 20);\n      });\n    }\n  }\n\n  getRandomInt(min, max){\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  start(){\n    if(gameState === false){\n      this.menuID = setInterval(this.renderMenu.bind(this, this.ctx), 30);\n    } else {\n      this.reset();\n      this.intervalID = setInterval(this.draw.bind(this, this.ctx), 30);\n    }\n  }\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","const Poodle = require(\"./poodle\");\n\nclass Pad{\n  constructor(x, y, type, move){\n    this.length = 60;\n    this.thick = 10;\n    this.x = x;\n    this.y = y;\n    this.type = type;\n    this.direction = ~~(Math.random() * 2) ? -1 : 1;\n    this.isMoving = move;\n\n    let num = Math.random();\n    if(num < .2) { type }\n\n    if(type === \"ord\"){\n      this.color = \"#2ECC71\";\n    }\n    else if (type === \"hype\"){\n      this.color = \"#F7F817\";\n    }\n  }\n\n  draw(ctx){\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x, this.y, this.length, this.thick);\n  }\n\n  onCollide(poodle){\n    poodle.fallStop();\n    if(this.type === \"hype\"){\n      poodle.jumpSpeed = 50;\n    }\n  }\n};\n\nmodule.exports = Pad;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pad.js\n// module id = 2\n// module chunks = 0","\nclass Poodle{\n  constructor(width, height){\n    this.gameWidth = width;\n    this.gameHeight = height;\n    this.image = new Image();\n    this.image.src = \"./assets/lumpy.png\";\n    this.width = 55;\n    this.height = 60;\n    this.x = 0;\n    this.y = 0;\n    this.isJumping = false;\n    this.isFalling = false;\n    this.jumpSpeed = 0;\n    this.fallSpeed = 0;\n  }\n\n  setPosition(x, y){\n    this.x = x;\n    this.y = y;\n  }\n\n  draw(ctx){\n    ctx.drawImage(this.image, this.x, this.y, this.width, this.height);\n  }\n\n  jump(){\n    if(this.isJumping === false && this.isFalling === false){\n      this.fallSpeed = 0;\n      this.isJumping = true;\n      this.jumpSpeed = 17;\n    }\n  }\n\n  checkFall(){\n    if(this.y + this.height < this.gameHeight){\n      this.setPosition(this.x, (this.y + this.fallSpeed));\n      this.fallSpeed = this.fallSpeed + 1;\n    }\n  }\n\n  fallStop(){\n    this.isFalling = false;\n    this.fallSpeed = 0;\n    this.jump();\n  }\n\n  moveLeft(){\n    if (this.x >0){\n      this.setPosition(this.x-10, this.y);\n    }\n  }\n\n  moveRight(){\n    if (this.x + this.width < this.gameWidth){\n      this.setPosition(this.x+10, this.y);\n    }\n  }\n\n\n\n}\n\nmodule.exports = Poodle;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/poodle.js\n// module id = 3\n// module chunks = 0","const Game = require(\"./game\");\nconst Poodle = require(\"./poodle\");\n\nclass GameView {\n  constructor(game, ctx){\n    this.ctx = ctx;\n    this.game = game;\n    this.poodle = new Poodle();\n  }\n\n  start(){\n    this.game.draw(this.ctx);\n  }\n\n\n}\n\nmodule.exports = GameView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game_view.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}